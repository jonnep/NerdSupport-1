<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="67625341-ca97-4514-8272-f62ef6081fe9" name="jpersson@PC260 2012-02-19 19:14:09" runUser="GROUP\jpersson" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="NerdDinner" id="a677183a-2241-46a2-8e6f-b1b8040dce34">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment runDeploymentRoot="jpersson_PC260 2012-02-19 19_14_09">
      <DeploymentItem filename="C:\Projects\NerdSupport.nethouselkpg\Lib\TechTalk.SpecFlow.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific>
        <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
          <AssemblyResolution>
            <TestDirectory useLoadContext="true" />
          </AssemblyResolution>
        </UnitTestRunConfig>
      </TestTypeSpecific>
      <AgentRule name="LocalMachineDefaultRole">
        <DataCollectors>
          <DataCollector uri="datacollector://microsoft/CodeCoverage/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.CodeCoverage.CoveragePlugIn, Microsoft.VisualStudio.QualityTools.Plugins.CodeCoverage, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="Code Coverage">
            <Configuration>
              <CodeCoverage xmlns="">
                <AspNet>
                  <AspNetCodeCoverageItem id="67c8b33c-a6ae-421f-bf79-3fb8f37a64c0" name="NerdDinner" applicationRoot="/" url="http://localhost:0/" />
                </AspNet>
              </CodeCoverage>
            </Configuration>
          </DataCollector>
        </DataCollectors>
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-02-19T19:14:09.6740076+01:00" queuing="2012-02-19T19:14:12.3882790+01:00" start="2012-02-19T19:14:12.4582860+01:00" finish="2012-02-19T19:14:15.2535655+01:00" />
  <ResultSummary outcome="Error">
    <Counters total="1" executed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="1" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
    <RunInfos>
      <RunInfo computerName="PC260" outcome="Warning" timestamp="2012-02-19T19:14:10.4220824+01:00">
        <Text>Cannot open the ASP.NET project 'NerdDinner'.</Text>
      </RunInfo>
      <RunInfo computerName="PC260" outcome="Warning" timestamp="2012-02-19T19:14:10.5390941+01:00">
        <Text>Instrumentation error: cannot find binary C:\Projects\NerdSupport.nethouselkpg\NerdDinner.Tests\bin\Debug\NerdDinner.Tests.dll.</Text>
      </RunInfo>
      <RunInfo computerName="PC260" outcome="Error" timestamp="2012-02-19T19:14:12.9523354+01:00">
        <Text>Cannot find the local Web page 'NerdDinner'.</Text>
      </RunInfo>
    </RunInfos>
    <ResultFiles>
      <ResultFile path="PC260\data.coverage" />
    </ResultFiles>
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="AddTwoNumbers" storage="c:\projects\nerdsupport.nethouselkpg\specs\nerdsupport.specs\bin\debug\nerdsupport.specs.dll" id="309ca51d-8858-24aa-f1fe-972eb086f9f7">
      <Description>Add two numbers</Description>
      <Execution id="4dc896a9-2508-4b74-a329-3f07653ac564" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Projects/NerdSupport.nethouselkpg/Specs/NerdSupport.Specs/bin/Debug/NerdSupport.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="NerdSupport.Specs.Backlog.AdditionFeature, NerdSupport.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddTwoNumbers" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="309ca51d-8858-24aa-f1fe-972eb086f9f7" executionId="4dc896a9-2508-4b74-a329-3f07653ac564" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="4dc896a9-2508-4b74-a329-3f07653ac564" testId="309ca51d-8858-24aa-f1fe-972eb086f9f7" testName="AddTwoNumbers" computerName="PC260" duration="00:00:00.0844701" startTime="2012-02-19T19:14:13.2463648+01:00" endTime="2012-02-19T19:14:13.6774079+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4dc896a9-2508-4b74-a329-3f07653ac564">
      <Output>
        <StdOut>Given I have entered 50 into the calculator
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have entered 50 into the calculator")]
        public void GivenIHaveEntered50IntoTheCalculator()
        {
            ScenarioContext.Current.Pending();
        }
    }

And I have entered 70 into the calculator
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have entered 70 into the calculator")]
        public void GivenIHaveEntered70IntoTheCalculator()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I press add
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I press add")]
        public void WhenIPressAdd()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the result should be 120 on the screen
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the result should be 120 on the screen")]
        public void ThenTheResultShouldBe120OnTheScreen()
        {
            ScenarioContext.Current.Pending();
        }
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"I have entered 50 into the calculator")]
    public void GivenIHaveEntered50IntoTheCalculator()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"I have entered 70 into the calculator")]
    public void GivenIHaveEntered70IntoTheCalculator()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the result should be 120 on the screen")]
    public void ThenTheResultShouldBe120OnTheScreen()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I press add")]
    public void WhenIPressAdd()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at NerdSupport.Specs.Backlog.AdditionFeature.ScenarioCleanup() in C:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\FärgläggningAvÄrendelista.feature.cs:line 0
   at NerdSupport.Specs.Backlog.AdditionFeature.AddTwoNumbers() in c:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\FärgläggningAvÄrendelista.feature:line 11
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>